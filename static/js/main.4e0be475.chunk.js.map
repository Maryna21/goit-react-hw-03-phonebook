{"version":3,"sources":["components/ContactList/contactList.module.css","app.module.css","components/Container/container.module.css","components/ContactForm/contactForm.module.css","components/ContactForm/contactForm.js","components/ContactList/contactList.js","components/Filter/filter.js","components/Container/container.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","loginInputId","shortid","generate","state","contacts","name","number","handleNameChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","reset","className","s","contactForm","onSubmit","this","labelForm","htmlFor","inputForm","type","id","onChange","buttonContactForm","Component","ContactList","onDeleteContact","map","item","buttonDelete","onClick","Filter","onChangeFilter","e","target","Container","children","container","App","filter","addContact","contact","prevState","find","alert","deleteContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","title","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e0be475.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"contactList_buttonDelete__1KIRp\",\"item\":\"contactList_item__1Zfmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2fbQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"labelForm\":\"contactForm_labelForm__108mt\",\"inputForm\":\"contactForm_inputForm__2N457\",\"buttonContactForm\":\"contactForm_buttonContactForm__2b9Ri\"};","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport React, { Component } from 'react';\nimport s from 'components/ContactForm/contactForm.module.css'\n\nexport default class ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        contacts: [],\n        name: '',\n        number: ''\n      }\n      handleNameChange=event=>{\n        this.setState({[event.currentTarget.name]:event.currentTarget.value});\n      }\n        handleSubmit = event => {\n          event.preventDefault();\n         this.props.onAddContact(this.state);\n         this.reset();\n        }\n        reset = () => {\n            this.setState({name: '', number:''})\n        }\n        render() {\n            return (\n              <form className={s.contactForm} onSubmit={this.handleSubmit}>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Name</label>\n                <input className={s.inputForm} type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Number</label>\n                <input className={s.inputForm}  type=\"tel\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button className={s.buttonContactForm}type=\"submit\">Add contact</button>\n              </form>\n            );\n          }}\n\n          ContactForm.propTypes = {\n            handleSubmit: PropTypes.func,\n            onAddContact: PropTypes.func,\n            loginInputId: PropTypes.func,\n            name: PropTypes.string,\n            number: PropTypes.number,\n         };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ContactList/contactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact})=>(\n\n  <ul>\n    {contacts.map(({id, name, number}) => (\n      <li className={s.item} key={id}> {name}: { number };\n      <button className={s.buttonDelete} type=\"button\" onClick={()=> onDeleteContact(id)}>Delete</button></li>\n    ))}\n  </ul>\n\n)\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.number,\n    }),\n  )\n};\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({value, onChangeFilter}){\n    return( \n        <div>\n            <p>Find contacts by name</p>\n            <input type=\"name\" value={value} onChange={e => onChangeFilter(e.target.value)}/>\n        </div>\n    )\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func,\n };","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","import shortid from 'shortid';\nimport './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\nimport Filter from 'components/Filter/filter';\nimport s from 'app.module.css';\nimport Container from 'components/Container/container';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  addContact = ({name, number}) => {\n    const contact = {\n        id: shortid.generate(),\n        name,\n        number: number,\n    };\n    this.setState(prevState =>{\n      if(this.state.contacts.find((contact)=>contact.name===name)){\n        alert (`${contact.name} is already in contacts.`)\n      }\n      else{\n      return {\n          contacts: [...prevState.contacts, contact],}}\n  })\n};\n\ndeleteContact = contactId =>{\n  this.setState(prevState =>({\n    contacts: prevState.contacts.filter(contact => contact.id!== contactId),\n  }))\n \n}\n\nchangeFilter = filter => {\n  this.setState({filter});\n}\n  \ngetVisibleContacts = ()=>{\n  const {contacts, filter} = this.state;\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()), \n    )\n}\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if(parsedContacts){\n    this.setState({ contacts: parsedContacts });}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  \n  render() {\n    const {filter} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n       <h1 className={s.title}>Phonebook</h1>\n     <ContactForm onAddContact={this.addContact} />\n     {visibleContacts.length > 0 && <div><h2>Contacts</h2><Filter value={filter} onChangeFilter ={this.changeFilter}/>\n     <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/></div>}\n     </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}